name: buffer-publish # Override to be the name of the application
track: stable # stable | canary
namespace: buffer
replicaCount: 10
deploymentUrl: "publish.buffer.com"
chart: "buffercharts/fast-frontend"
chartVersion: "0.0.3"
cdEnabled: true
cdBranchEnabled: true
dockerfile: Dockerfile
channel: eng-proj-kuberdash
clusterName: "kubeeast"
latencySensitive: true
image:
  repository: bufferapp/buffer-publish # Override with the docker image
  tag: latest # this will be overriden by the build process
  pullPolicy: IfNotPresent
reverseproxyImageRepository: bufferapp/publish-frontend
resources:
  limits:
    memory: 256Mi
  requests:
    cpu: 150m
    memory: 80Mi
extraMainContainerValues:
  command: ["node"]
  args: ["./index.js"]
  livenessProbe:
    httpGet:
      path: /health-check
      port: 3000
    initialDelaySeconds: 15
    periodSeconds: 5
    failureThreshold: 2
    timeoutSeconds: 1
  readinessProbe:
    httpGet:
      path: /health-check
      port: 3000
    periodSeconds: 5
    failureThreshold: 2
    timeoutSeconds: 1
extraSpecSpecs:
  dnsPolicy: ClusterFirst
  terminationGracePeriodSeconds: 30
  restartPolicy: Always
extraSpecs:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 10
env:
  - name: AUTH_SVC_ADDR
    value: http://authentication-service.core
  - name: DD_AGENT_HOST
    valueFrom:
      fieldRef:
        fieldPath: status.hostIP
  - name: DD_SERVICE_NAME
    value: "publish-server"
  - name: DD_RUM_APP_ID
    valueFrom:
      secretKeyRef:
        key: dd-rum-app-id
        name: buffer-publish-keys
  - name: DD_RUM_CLIENT_TOKEN
    valueFrom:
      secretKeyRef:
        key: dd-rum-client-token
        name: buffer-publish-keys
  - name: API_ADDR
    value: http://publish-api.buffer:443
  - name: ANALYZE_API_ADDR
    value: http://analyze-api.analyze:443
  - name: CLIENT_ID
    valueFrom:
      secretKeyRef:
        key: client-id
        name: buffer-publish-keys
  - name: CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        key: client-secret
        name: buffer-publish-keys
  - name: BUGSNAG_KEY
    valueFrom:
      secretKeyRef:
        key: bugsnag
        name: buffer-publish-keys
  - name: PUSHER_APP_ID
    valueFrom:
      secretKeyRef:
        key: pusher-app-id
        name: buffer-publish-keys
  - name: PUSHER_APP_KEY
    valueFrom:
      secretKeyRef:
        key: pusher-app-key
        name: buffer-publish-keys
  - name: PUSHER_APP_SECRET
    valueFrom:
      secretKeyRef:
        key: pusher-app-secret
        name: buffer-publish-keys
  - name: PUSHER_CLUSTER
    valueFrom:
      secretKeyRef:
        key: pusher-cluster
        name: buffer-publish-keys
  - name: STRIPE_PUBLISHABLE
    valueFrom:
      secretKeyRef:
        key: stripe-publishable
        name: buffer-publish-keys
  - name: RELEASE_STAGE
    value: production
# enable the ingress open up the service to the public internet
service:
  internalPort: 3000
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-1:980620087509:certificate/6b704a93-67de-444c-89fc-9f659bf2dd42
ingress:
  enabled: false
